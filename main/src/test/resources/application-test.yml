server:
  #端口
  port: 80
  #上下文路径
  contextPath: /boot
  #内置tomcat编码
  tomcat:
    uriEncoding: utf-8
spring:
  profiles:
    #切换配置
    active: dev
  aop:
    proxy-target-class: true  #false为启用jdk默认动态代理,true为cglib动态代理
  http:
    converters:
      preferred-json-mapper: fastjson
    multipart:
      max-request-size: 100MB #最大请求大小
      max-file-size: 100MB #最大文件大小
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 1
      minIdle: 3
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  cache:
    jcache:
      config: classpath:ehcache.xml
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # 连接池
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
      # 连接超时时间（毫秒）
      timeout: 0

#安全设置
security:
  basic:
    enabled: true
    path: /swagger-ui.html,/druid
  user:
    name: admin
    password: bootadmin
##################kafka配置#################################
#  kafka:
#    # 指定kafka 代理地址，可以多个
#    bootstrapServers: 172.16.131.74:8092
#    consumer:
#      groupId: SAAS_COPY_SITE
#      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
#      valueDeserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      keySerializer: org.apache.kafka.common.serialization.StringDeserializer
#      valueSerializer: org.apache.kafka.common.serialization.StringDeserializer


###################  日志配置  ###################
logging:
  path: ../logs/boot/
  file: boot.log
  level.root: info

###################  mybatis-plus配置  ###################
mybatis-plus:
  mapper-locations: classpath*:com/rukiy/**/mapper/*Mapper.xml
  #model类路径
  typeAliasesPackage: com.rukiy.*.model
  #自定义字段类型转换路径
  typeHandlersPackage: com.rukiy.dao.typehaneler
  global-config:
    #0:数据库ID自增   1:用户输入id  2:全局唯一id(IdWorker)  3:全局唯一ID(uuid)
    id-type: 3
    #驼峰下划线转换
    db-column-underline: false
    #刷新mapper 调试神器
    refresh-mapper: true
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
  configuration:
    map-underscore-to-camel-case: false
    #配置的缓存的全局开关
    cache-enabled: true
    #延时加载的开关
    lazyLoadingEnabled: true
    #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    multipleResultSetsEnabled: true
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql语句,调试用

############################swagger#####################################
swagger:
  enabled: true
  #标题
  title: rukiy Boot API Doc
  #描述
  description: rukiy Boot Api文档
  #版本
  version: 1.0
  #联系人
  contact:
    name:
    url:
    email:
  #扫描的基础包
  base-package: com.rukiy.core
  #需要处理的基础URL规则，默认：/**
  base-path:
  #需要排除的URL规则，默认：空
  exclude-path:
  #文档的host信息，默认：空
  host:
  docket:
    z-Core:
      #标题
      title: 公共接口
      #描述
      description: 公共接口API说明
      #swagger扫描的基础包，默认：全扫描
      base-package: com.rukiy.core
  #自定义参数
#  globalOperationParameters[0]:
    #参数名
#    name:
    #描述信息
#    description:
    #指定参数类型
#    modelRef:
    #指定参数存放位置,可选header,query,path,body.form
#    parameterType:
    #指定参数是否必传，true,false
#    required: